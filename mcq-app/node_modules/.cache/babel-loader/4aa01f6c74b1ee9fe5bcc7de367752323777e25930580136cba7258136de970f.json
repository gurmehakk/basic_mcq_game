{"ast":null,"code":"var _jsxFileName = \"D:\\\\dwlnoads\\\\mcq-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the CSS file\n\nimport questions from './questions';\nimport QuestionComponent from './QuestionComponent';\nimport ScoreComponent from './ScoreComponent';\nconst App = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false); // New state\n\n  const handleAnswer = selectedOption => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  useEffect(() => {\n    if (currentQuestion === questions.length) {\n      // All questions answered\n    }\n  }, [currentQuestion]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \" \", !gameStarted ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setGameStarted(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Start Game\") : currentQuestion < questions.length ? /*#__PURE__*/React.createElement(QuestionComponent, {\n    question: questions[currentQuestion].question,\n    options: questions[currentQuestion].options,\n    correctAnswer: questions[currentQuestion].correctAnswer // Pass the correct answer\n    ,\n    handleAnswer: handleAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(ScoreComponent, {\n    score: score,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};\n_s(App, \"Q7I+0P+qJIOHvozVcGkZe8f4DaA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questions","QuestionComponent","ScoreComponent","App","_s","currentQuestion","setCurrentQuestion","score","setScore","gameStarted","setGameStarted","handleAnswer","selectedOption","correctAnswer","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","_c","$RefreshReg$"],"sources":["D:/dwlnoads/mcq-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // Import the CSS file\r\n\r\nimport questions from './questions';\r\nimport QuestionComponent from './QuestionComponent';\r\nimport ScoreComponent from './ScoreComponent';\r\n\r\nconst App = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameStarted, setGameStarted] = useState(false); // New state\r\n\r\n  const handleAnswer = (selectedOption) => {\r\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentQuestion === questions.length) {\r\n      // All questions answered\r\n    }\r\n  }, [currentQuestion]);\r\n\r\n  return (\r\n    <div className=\"container\"> {/* Apply the 'container' class */}\r\n      {!gameStarted ? (\r\n        <button onClick={() => setGameStarted(true)}>Start Game</button>\r\n      ) : currentQuestion < questions.length ? (\r\n        <QuestionComponent\r\n          question={questions[currentQuestion].question}\r\n          options={questions[currentQuestion].options}\r\n          correctAnswer={questions[currentQuestion].correctAnswer} // Pass the correct answer\r\n          handleAnswer={handleAnswer}\r\n        />\r\n      ) : (\r\n        <ScoreComponent score={score} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;;AAEpB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD,MAAMa,YAAY,GAAIC,cAAc,IAAK;IACvC,IAAIA,cAAc,KAAKZ,SAAS,CAACK,eAAe,CAAC,CAACQ,aAAa,EAAE;MAC/DL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACAD,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;EACzC,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd,IAAIM,eAAe,KAAKL,SAAS,CAACc,MAAM,EAAE;MACxC;IAAA;EAEJ,CAAC,EAAE,CAACT,eAAe,CAAC,CAAC;EAErB,oBACER,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAC,EACzB,CAACb,WAAW,gBACXZ,KAAA,CAAAkB,aAAA;IAAQQ,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAAC,IAAI,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CAAC,GAC9DjB,eAAe,GAAGL,SAAS,CAACc,MAAM,gBACpCjB,KAAA,CAAAkB,aAAA,CAACd,iBAAiB;IAChBuB,QAAQ,EAAExB,SAAS,CAACK,eAAe,CAAC,CAACmB,QAAS;IAC9CC,OAAO,EAAEzB,SAAS,CAACK,eAAe,CAAC,CAACoB,OAAQ;IAC5CZ,aAAa,EAAEb,SAAS,CAACK,eAAe,CAAC,CAACQ,aAAc,CAAC;IAAA;IACzDF,YAAY,EAAEA,YAAa;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CAAC,gBAEFzB,KAAA,CAAAkB,aAAA,CAACb,cAAc;IAACK,KAAK,EAAEA,KAAM;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAE9B,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}